@page "/renderfragment/one"
@page "/renderfragment/two"

@inject NavigationManager NavigationManager
@layout ChildLayout

@* ------------------------------------------------------------------------------------------------------------------------------------ *@
@* Cannot use rendermode with RenderFragments. Enabling any of the Interactive modes makes the switch between renderfragments unusable. *@
@* ------------------------------------------------------------------------------------------------------------------------------------ *@
@* @rendermode InteractiveAuto *@

@using RenderFragmentIssueFluent.Client.Layout
@using Microsoft.AspNetCore.Components.Sections

<SectionContent SectionName="resource-navmenu">
    <FluentNavMenu Width="200">
        <FluentNavLink Icon="@(new Icons.Regular.Size24.Box())" Href="@("renderfragment/one")">Fragment One</FluentNavLink>
        <FluentNavLink Icon="@(new Icons.Regular.Size24.Box())" Href="@("renderfragment/two")">Fragment Two</FluentNavLink>
    </FluentNavMenu>
</SectionContent>

<SectionContent SectionName="resource-toolbar">
    <FluentToolbar Style="left:0px; width:100%;background:transparent;">
        <FluentButton IconStart="@(new Icons.Regular.Size16.Add())" Appearance="Appearance.Lightweight">Add some stuff</FluentButton>
        <FluentDivider Orientation="Orientation.Vertical" Role="@DividerRole.Presentation"></FluentDivider>
    </FluentToolbar>
</SectionContent>

<SectionContent SectionName="resource-title">
    <h3>RenderFragmentPage</h3>
    <p>@_renderInfo</p>
</SectionContent>

<RenderFragmentPageComponent ShowFragmentNamed="@_fragmentName">
    <FragmentOneContent>
        <div>Inner content of fragment one</div>
    </FragmentOneContent>
    <FragmentTwoContent>
        <div>Inner content of fragment two</div>
    </FragmentTwoContent>
</RenderFragmentPageComponent>

@code {
    private string _fragmentName = "fragmentNameNotSet";
    private string _renderInfo = string.Empty;

    protected override void OnInitialized()
    {
    }

    protected override Task OnInitializedAsync()
    {
        _renderInfo += $"|{RendererInfo.Name}, IsInteractive:{RendererInfo.IsInteractive}";
        _fragmentName = NavigationManager.Uri.Split('/').Last();

        return base.OnInitializedAsync();
    }
}
